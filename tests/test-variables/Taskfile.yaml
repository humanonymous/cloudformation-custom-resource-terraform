version: "3"

set:
  - errexit
  - nounset
  - pipefail

includes:
  lib:
    taskfile: ../lib.yaml

tasks:
  run-test:
    desc: Tests variables that are given to the custom resource
    cmds:
      - echo "--- --- --- --- ---"
      - defer: { task: cleanup }
      - task: set-up
      - task: create

  set-up:
    cmds:
      - task: lib:set-up:empty

  create:
    desc: "Set up resources and deploy {{.TEST_NAME}} stack for CREATE phase"
    cmds:
      - echo "ðŸš€ Running CREATE phase for stack \"{{.TESTS_SOFTWARE_NAME}}-tests-{{.TEST_NAME}}\""
      - task: lib:deploy-stack
        vars:
          TEST_NAME: "{{.TEST_NAME}}"
          TEMPLATE_FILE: templates/Create.yaml
      - task: lib:assert-stack-status
        vars:
          TEST_NAME: "{{.TEST_NAME}}"
          EXPECTED_STATUS: CREATE_COMPLETE
      - task: lib:assert-output-value
        vars:
          TEST_NAME: "{{.TEST_NAME}}"
          OUTPUT_KEY: String
          EXPECTED_VALUE: "Hello, String!"
      - task: lib:assert-output-value
        vars:
          TEST_NAME: "{{.TEST_NAME}}"
          OUTPUT_KEY: Number
          EXPECTED_VALUE: 77
      - task: lib:assert-output-value
        vars:
          TEST_NAME: "{{.TEST_NAME}}"
          OUTPUT_KEY: Boolean
          EXPECTED_VALUE: true
      - task: lib:assert-output-value
        vars:
          TEST_NAME: "{{.TEST_NAME}}"
          OUTPUT_KEY: List
          EXPECTED_VALUE: "Hello, List, !"
      - task: lib:assert-output-value
        vars:
          TEST_NAME: "{{.TEST_NAME}}"
          OUTPUT_KEY: Set
          EXPECTED_VALUE: "!, Hello, Set"
      - task: lib:assert-output-value
        vars:
          TEST_NAME: "{{.TEST_NAME}}"
          OUTPUT_KEY: MapAsString
          EXPECTED_VALUE: '{\""Key1"\":\""Hello"\",\""Key2"\":\""Map"\",\""Key3"\":\""!"\"}'

  cleanup:
    desc: "Clean up the {{.TEST_NAME}} stack after tests"
    cmds:
      - task: lib:cleanup
        vars:
          TEST_NAME: "{{.TEST_NAME}}"
