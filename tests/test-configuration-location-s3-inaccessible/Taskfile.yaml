version: "3"

set:
  - errexit
  - nounset
  - pipefail

includes:
  lib:
    taskfile: ../lib.yaml

tasks:
  run-test:
    desc: Tests that inaccessible S3 Terraform configuration is handled properly
    cmds:
      - echo "--- --- --- --- ---"
      - defer: { task: cleanup }
      - task: set-up
      - task: create

  set-up:
    cmds:
      - task: lib:set-up:empty

  create:
    desc: "Set up resources and deploy {{.TEST_NAME}} stack for CREATE phase"
    cmds:
      - echo "ðŸš€ Running CREATE phase for stack \"{{.TESTS_SOFTWARE_NAME}}-tests-{{.TEST_NAME}}\""
      - task: lib:deploy-stack
        vars:
          TEST_NAME: "{{.TEST_NAME}}"
          TEMPLATE_FILE: templates/Create.yaml
      - task: lib:assert-stack-status
        vars:
          TEST_NAME: "{{.TEST_NAME}}"
          EXPECTED_STATUS: ROLLBACK_COMPLETE
      - task: lib:assert-resource-present
        vars:
          TEST_NAME: "{{.TEST_NAME}}"
          RESOURCE_ID: CustomTerraformConfigurationLocationS3Inaccessible
      - task: lib:assert-events-contain
        vars:
          TEST_NAME: "{{.TEST_NAME}}"
          EXPECTED_REASON: "Failed to get Terraform configuration from S3 s3://BA145046-D437-4A80-B316-E5FCA6DC5DF3/configuration.tf - make sure it is reachable by the Custom Resource service."

  cleanup:
    desc: "Clean up the {{.TEST_NAME}} stack after tests"
    cmds:
      - task: lib:cleanup
        vars:
          TEST_NAME: "{{.TEST_NAME}}"
